Description:  This template deploys a TMHCC Regional Hub network version 2.
  This Hub network consists of a Shared Services VPC, a vEdge VPC, a Firewall
  VPC and all the interconnects required.

Resources:
  DHCPOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      Tags:
        - Key: Name
          Value: Regional DHCP Options
      DomainName: hcch.com
      DomainNameServers:
        {%- for nameserver in nameservers %}
        - {{nameserver}}
        {%- endfor %}

  Rfc1918PrefixList:
    Type: AWS::EC2::PrefixList
    Properties:
      PrefixListName: RFC1918-PrefixList
      AddressFamily: IPv4
      MaxEntries: 3
      Entries:
        - Cidr: 10.0.0.0/8
          Description: 10.0.0.0/8 Private Prefix
        - Cidr: 172.16.0.0/12
          Description: 172.16.0.0/12 Private Prefix
        - Cidr: 192.168.0.0/16
          Description: 192.168.0.0/16 Private Prefix

  TgRouteTableBlackholeRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties:
      Blackhole: yes
      DestinationCidrBlock: {{ regionalCidr }}
      TransitGatewayRouteTableId: {{ TgMainRouteTable }}

  #
  # Shared Services VPC
  SsVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: {{ ssVpcCidr }}
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Shared Services VPC

  SsVpcDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId: !Ref SsVpc
      DhcpOptionsId: !Ref DHCPOptions

  SsSGAnyAny:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: Permit all traffic
      GroupDescription: Permit all network access
      GroupName: PermitAnyAny-SG
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
        - CidrIpv6: ::/0
          IpProtocol: -1
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
        - CidrIpv6: ::/0
          IpProtocol: -1
      VpcId: !Ref SsVpc

  SsPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SsVpc
      Tags:
        - Key: Name
          Value: Shared Services Private Routes AZ A

  SsPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SsVpc
      Tags:
        - Key: Name
          Value: Shared Services Private Routes AZ B

  SsPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SsVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: {{ ssPrivateSubnet1 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ ssPrivateSubnet1Description }}

  SsPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SsPrivateRouteTable1
      SubnetId: !Ref SsPrivateSubnet1

  SsPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SsVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: {{ ssPrivateSubnet2 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ ssPrivateSubnet2Description }}

  SsPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SsPrivateRouteTable2
      SubnetId: !Ref SsPrivateSubnet2

  SsTransitSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SsVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: {{ ssTransitSubnet1 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ ssTransitSubnet1Description }}

  SsTransitSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SsPrivateRouteTable1
      SubnetId: !Ref SsTransitSubnet1

  SsTransitSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SsVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: {{ ssTransitSubnet2 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ ssTransitSubnet2Description }}

  SsTransitSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SsPrivateRouteTable2
      SubnetId: !Ref SsTransitSubnet2

  SsPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SsVpc
      Tags:
        - Key: Name
          Value: Shared Services Public Routes

  SsInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Shared Services Internet Gateway

  SsInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref SsInternetGateway
      VpcId: !Ref SsVpc

  SsDefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: SsInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref SsPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SsInternetGateway

  Ss10Slash8PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: SsTgAttachment
    Properties:
      RouteTableId: !Ref SsPublicRouteTable
      DestinationCidrBlock: 10.0.0.0/8
      TransitGatewayId: {{ TgId }}

  Ss17216Slash12PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: SsTgAttachment
    Properties:
      RouteTableId: !Ref SsPublicRouteTable
      DestinationCidrBlock: 172.16.0.0/12
      TransitGatewayId: {{ TgId }}

  Ss192168Slash16PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: SsTgAttachment
    Properties:
      RouteTableId: !Ref SsPublicRouteTable
      DestinationCidrBlock: 192.168.0.0/16
      TransitGatewayId: {{ TgId }}

  SsPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SsVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: {{ ssPublicSubnet1 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ ssPublicSubnet1Description }}

  SsPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SsPublicRouteTable
      SubnetId: !Ref SsPublicSubnet1

  SsPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SsVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: {{ ssPublicSubnet2 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ ssPublicSubnet2Description }}

  SsPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SsPublicRouteTable
      SubnetId: !Ref SsPublicSubnet2

  SsPrivateDefaultRoute1:
    Type: AWS::EC2::Route
    DependsOn: SsTgAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref SsPrivateRouteTable1
      TransitGatewayId: {{ TgId }}

  SsPrivateDefaultRoute2:
    Type: AWS::EC2::Route
    DependsOn: SsTgAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref SsPrivateRouteTable2
      TransitGatewayId: {{ TgId }}

  SsTgAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
        - !Ref SsTransitSubnet1
        - !Ref SsTransitSubnet2
      TransitGatewayId: {{ TgId }}
      VpcId: !Ref SsVpc
      Tags:
        - Key: Name
          Value: Shared Services VPC Attachment

  SsTgMainRouteTablePropagation:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    DependsOn: 
      - SsTgAttachment
    Properties:
      TransitGatewayAttachmentId: !Ref SsTgAttachment
      TransitGatewayRouteTableId: {{ TgMainRouteTable }}

  SsTgInspectionRouteTablePropagation:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    DependsOn: 
      - SsTgAttachment
      - FwTgRouteTable
    Properties:
      TransitGatewayAttachmentId: !Ref SsTgAttachment
      TransitGatewayRouteTableId: !Ref FwTgRouteTable

  SsS3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - !Ref SsPrivateRouteTable1
        - !Ref SsPrivateRouteTable1
        - !Ref SsPublicRouteTable
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref SsVpc
      Tags:
        - Key: Name
          Value: Shared Services S3 Gateway

  #
  # vEdge VPC
  VeVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: {{ veVpcCidr }}
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: vEdge VPC

  VeVpcDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId: !Ref VeVpc
      DhcpOptionsId: !Ref DHCPOptions

  VeSGAnyAny:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: Permit all traffic
      GroupDescription: Permit all network access
      GroupName: PermitAnyAny-SG
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
        - CidrIpv6: ::/0
          IpProtocol: -1
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
        - CidrIpv6: ::/0
          IepProtocol: -1
      VpcId: !Ref VeVpc

  VeInboundRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VeVpc
      Tags:
        - Key: Name
          Value: vEdge In Routes AZ A

  VeTransitSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VeVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: {{ veTransitSubnet1 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ veTransitSubnet1Description }}

  VeTransitSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VeInboundRouteTable1
      SubnetId: !Ref VeTransitSubnet1

  VeInboundRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VeVpc
      Tags:
        - Key: Name
          Value: vEdge In Routes AZ B

  VeTransitSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VeVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: {{ veTransitSubnet2 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ veTransitSubnet2Description }}

  VeTransitSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VeInboundRouteTable2
      SubnetId: !Ref VeTransitSubnet2

  VeOutboundRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VeVpc
      Tags:
        - Key: Name
          Value: vEdge Out Routes AZ A

  VePrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VeVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: {{ vePrivateSubnet1 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ vePrivateSubnet1Description }}

  VePrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VeOutboundRouteTable1
      SubnetId: !Ref VePrivateSubnet1

  VeOutboundRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VeVpc
      Tags:
        - Key: Name
          Value: vEdge Out Routes AZ B

  VePrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VeVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: {{ vePrivateSubnet2 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ vePrivateSubnet2Description }}

  VePrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VeOutboundRouteTable2
      SubnetId: !Ref VePrivateSubnet2

  VePublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VeVpc
      Tags:
        - Key: Name
          Value: vEdge Public Routes

  VeInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: vEdge Internet Gateway

  VeInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref VeInternetGateway
      VpcId: !Ref VeVpc

  VeDefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VeInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref VePublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VeInternetGateway

  VePublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VeVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: {{ vePublicSubnet1 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ vePublicSubnet1Description }}

  VePublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VePublicRouteTable
      SubnetId: !Ref VePublicSubnet1

  VePublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VeVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: {{ vePublicSubnet2 }}
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: {{ vePublicSubnet2Description }}

  VePublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VePublicRouteTable
      SubnetId: !Ref VePublicSubnet2

  VeTgAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
        - !Ref VeTransitSubnet1
        - !Ref VeTransitSubnet2
      TransitGatewayId: {{ TgId }}
      VpcId: !Ref VeVpc
      Tags:
        - Key: Name
          Value: vEdge VPC Attachment

  VeTgRouteTableAssociation:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    DependsOn:
      - VeTgAttachment
    Properties:
      TransitGatewayAttachmentId: !Ref VeTgAttachment
      TransitGatewayRouteTableId: {{ TgMainRouteTable }}

  VeTgRouteTablePropagation:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    DependsOn:
      - VeTgAttachment
    Properties:
      TransitGatewayAttachmentId: !Ref VeTgAttachment
      TransitGatewayRouteTableId: {{ TgMainRouteTable }}

  VeOutboundRouteTable1DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: VeTgAttachment
    Properties:
      RouteTableId: !Ref VeOutboundRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: {{ TgId }}

  VeOutboundRouteTable2DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: VeTgAttachment
    Properties:
      RouteTableId: !Ref VeOutboundRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: {{ TgId }}

  #
  # Inspection VPC
  FwVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 100.64.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Inspection VPC

  FwInspectionRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FwVpc
      Tags:
        - Key: Name
          Value: Inspection Routes AZ A

  FwTransitSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FwVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: 100.64.0.0/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Transit Subnet AZ A

  FwTransitSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref FwInspectionRouteTable1
      SubnetId: !Ref FwTransitSubnet1

  FwInspectionRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FwVpc
      Tags:
        - Key: Name
          Value: Inspection Routes AZ B

  FwTransitSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FwVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: 100.64.0.16/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Transit Subnet AZ B

  FwTransitSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref FwInspectionRouteTable2
      SubnetId: !Ref FwTransitSubnet2

  FwTgAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
        - !Ref FwTransitSubnet1
        - !Ref FwTransitSubnet2
      TransitGatewayId: {{ TgId }}
      VpcId: !Ref FwVpc
      Tags:
        - Key: Name
          Value: Inspection VPC Attachment

  FwFirewallRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FwVpc
      Tags:
        - Key: Name
          Value: AWS Firewall Routes

  FwDefaultFirewallRoute:
    Type: AWS::EC2::Route
    DependsOn: FwTgAttachment
    Properties:
      RouteTableId: !Ref FwFirewallRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: {{ TgId }}

  FwFirewallSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FwVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: 100.64.1.0/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Firewall Subnet AZ A

  FwFirewallSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref FwFirewallRouteTable
      SubnetId: !Ref FwFirewallSubnet1

  FwFirewallSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FwVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: 100.64.1.16/28
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Firewall Subnet AZ B

  FwFirewallSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref FwFirewallRouteTable
      SubnetId: !Ref FwFirewallSubnet2

  FwTgRouteTable:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Inspection Route Table
      TransitGatewayId: {{ TgId }}

  FwTgRouteTableDefaultRoute:
    Type: AWS::EC2::TransitGatewayRoute
    DependsOn: VeTgAttachment
    Properties:
      Blackhole: No
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayAttachmentId: !Ref VeTgAttachment
      TransitGatewayRouteTableId: !Ref FwTgRouteTable

  FwTgRouteTableAssociation:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties:
      TransitGatewayAttachmentId: !Ref FwTgAttachment
      TransitGatewayRouteTableId: !Ref FwTgRouteTable

Outputs:
  DHCPOptions:
    Description: Regional DHCP Options
    Value: !Ref DHCPOptions
    Export:
      Name: DHCPOptions


  Rfc1918PrefixList:
    Description: Prefix list containing RFC1918 prefixes
    Value: !Ref Rfc1918PrefixList
    Export:
      Name: Rfc1918PrefixList

  #
  # Shared Services VPC
  SsVpc:
    Description: A reference to the created Shared Services VPC
    Value: !Ref SsVpc
    Export:
      Name: SsVpc

  SsVpcActions:
    Description: Manual actions to perform on VPC after creation
    Value: Create route with Rfc1918PrefixList in the Shared Services Route table.

  SsVpcCidr:
    Description: The CIDR of the Shared Services VPC
    Value: {{ ssVpcCidr }}

  SsPrivateSubnet1:
    Description: AWS ID of the private subnet in the 1st Availability Zone
    Value: !Ref SsPrivateSubnet1
    Export:
      Name: SsPrivateSubnet1

  SsPrivateSubnetIP1:
    Description: Subnet of the private subnet in the 1st Availability Zone
    Value: {{ ssPrivateSubnet1 }}

  SsPrivateSubnet2:
    Description: AWS ID of the private subnet in the 2nd Availability Zone
    Value: !Ref SsPrivateSubnet2
    Export:
      Name: SsPrivateSubnet2

  SsPrivateSubnetIP2:
    Description: Subnet of the private subnet in the 2nd Availability Zone
    Value: {{ ssPrivateSubnet2 }}

  SsTransitSubnet1:
    Description: AWS ID of the transit subnet in the 1st Availability Zone
    Value: !Ref SsTransitSubnet1

  SsTransitSubnetIp1:
    Description: Subnet of the transit subnet in the 1st Availability Zone
    Value: {{ ssTransitSubnet1 }}

  SsTransitSubnet2:
    Description: AWS ID of the transit subnet in the 2nd Availability Zone
    Value: !Ref SsTransitSubnet2

  SsTransitSubnetIp2:
    Description: Subnet of the transit subnet in the 2nd Availability Zone
    Value: {{ ssTransitSubnet2 }}

  SsPublicSubnet1:
    Description: AWS ID of the public subnet in the 1st Availability Zone
    Value: !Ref SsPublicSubnet1
    Export:
      Name: SsPublicSubnet1

  SsPublicSubnetIP1:
    Description: Subnet of the public subnet in the 1st Availability Zone
    Value: {{ ssPublicSubnet1 }}

  SsPublicSubnet2:
    Description: AWS ID of the public subnet in the 2nd Availability Zone
    Value: !Ref SsPublicSubnet2
    Export:
      Name: SsPublicSubnet2

  SsPublicSubnetIP2:
    Description: Subnet of the public subnet in the 2nd Availability Zone
    Value: {{ ssPublicSubnet2 }}

  SsTgAttachment:
    Description: AWS ID of the Shared Services Transit Gateway Attachment
    Value: !Ref SsTgAttachment

  #
  # vEdge
  VeVpc:
    Description: A reference to the created vEdge VPC
    Value: !Ref VeVpc
    Export:
      Name: VeVpc

  VeTgActions:
    Description: Manual actions to perform on Transit Gateway after creation
    Value: Configure TG Attachment appliance-mode

  VeVpcCidr:
    Description: The CIDR of the vEdge VPC
    Value: {{ veVpcCidr }}

  VePrivateSubnet1:
    Description: AWS ID of the private subnet in the 1st Availability Zone
    Value: !Ref VePrivateSubnet1
    Export:
      Name: vEdgePrivateSubnet1

  VePrivateSubnetIP1:
    Description: Subnet of the private subnet in the 1st Availability Zone
    Value: {{ vePrivateSubnet1 }}

  VePrivateSubnet2:
    Description: AWS ID of the private subnet in the 2nd Availability Zone
    Value: !Ref VePrivateSubnet2
    Export:
      Name: vEdgePrivateSubnet2

  VePrivateSubnetIP2:
    Description: Subnet of the private subnet in the 2nd Availability Zone
    Value: {{ vePrivateSubnet2 }}

  VeTransitSubnet1:
    Description: AWS ID of the transit subnet in the 1st Availability Zone
    Value: !Ref VeTransitSubnet1

  VeTransitSubnetIp1:
    Description: Subnet of the transit subnet in the 1st Availability Zone
    Value: {{ veTransitSubnet1 }}

  VeTransitSubnet2:
    Description: AWS ID of the transit subnet in the 2nd Availability Zone
    Value: !Ref VeTransitSubnet2

  VeTransitSubnetIp2:
    Description: Subnet of the transit subnet in the 2nd Availability Zone
    Value: {{ veTransitSubnet2 }}

  VePublicSubnet1:
    Description: AWS ID of the public subnet in the 1st Availability Zone
    Value: !Ref VePublicSubnet1

  VePublicSubnetIP1:
    Description: Subnet of the public subnet in the 1st Availability Zone
    Value: {{ vePublicSubnet1 }}

  VePublicSubnet2:
    Description: AWS ID of the public subnet in the 2nd Availability Zone
    Value: !Ref VePublicSubnet2

  VePublicSubnetIP2:
    Description: Subnet of the public subnet in the 2nd Availability Zone
    Value: {{ vePublicSubnet2 }}

  VeTgAttachment:
    Description: AWS ID of the vEdge Transit Gateway Attachment
    Value: !Ref VeTgAttachment

  VeApplianceModeCommand:
    Description: Command to enable 'appliance mode' for vEdge VPC
    Value: !Sub
      - aws ec2 modify-transit-gateway-vpc-attachment --transit-gateway-attachment-id ${attachmentId} --options ApplianceModeSupport=enable
      - { attachmentId: !Ref VeTgAttachment }

  #
  # AWS Firewall
  FwVpc:
    Description: A reference to the created Inspection VPC
    Value: !Ref FwVpc

  FwVpcActions:
    Description: Manual actions to perform on VPC after creation
    Value: Deploy AWS Firewall, configure default route in Inspection route tables pointing to Firewall ENIs.

  FwTgActions:
    Description: Manual actions to perform on Transit Gateway after creation
    Value: 1: Create reference to S3 managed prefix-list. 2: Configure TG Attachment appliance-mode

  FwTgAttachment:
    Description: AWS ID of the AWS Firewall Transit Gateway Attachment
    Value: !Ref FwTgAttachment
    Export:
      Name: FwTgAttachment

  FwTgRouteTable:
    Description: AWS ID of the Inspection Route Table
    Value: !Ref FwTgRouteTable
    Export:
      Name: FwTgRouteTable

  FwApplianceModeCommand:
    Description: Command to enable 'appliance mode' for Inspection VPC
    Value: !Sub
      - aws ec2 modify-transit-gateway-vpc-attachment --transit-gateway-attachment-id ${attachmentId} --options ApplianceModeSupport=enable
      - { attachmentId: !Ref FwTgAttachment }

